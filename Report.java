/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vms;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author navee
 */
public class Report extends javax.swing.JFrame {

    /**
     * Creates new form Report
     */
    public Report() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("    Publish of Rules");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("For Voters:\n\nVoter Registration: Ensure you are registered to vote well before election day according to the\n requirements of your jurisdiction.\nKnow the Voting Procedures: Familiarize yourself with the voting procedures in your area, including\n polling location, voting hours, and any identification requirements.\nResearch the Candidates and Issues: Take the time to research the candidates and their platforms, as well\n as any ballot measures or propositions that will be voted on.\nRespect Polling Place Rules: Follow the rules and instructions provided at your polling place, including \nmaintaining order, respecting others, and adhering to any COVID-19 safety protocols in place.\nAvoid Electioneering: Refrain from engaging in electioneering activities, such as campaigning or\n distributing political materials, within a designated distance from the polling place.\nReport Irregularities: Report any irregularities or violations of election laws to the appropriate authorities.\n\nFor Candidates:\n\nComply with Campaign Finance Laws: Adhere to campaign finance laws and regulations governing\n the solicitation and use of campaign funds.\nEthical Campaigning: Conduct your campaign with integrity and honesty, refraining from spreading \nfalse information or engaging in negative campaigning.\nRespect Election Laws: Abide by all election laws and regulations, including those regarding campaign \nadvertising, disclosure of campaign finances, and reporting requirements.\nRespect Opponents and Voters: Treat your opponents and voters with respect and civility, avoiding\n personal attacks or inflammatory rhetoric.\nRespect Polling Places: Do not campaign or engage in electioneering activities within a designated \ndistance from polling places on election day.\nEnsure Compliance with Ballot Access Requirements: Ensure that you meet all requirements for ballot\n access, including filing deadlines, signature requirements, and any other eligibility criteria set forth by \nelection officials");
        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setText("VoterDetails");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("CandidateDetails");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(jButton1)
                                .addGap(58, 58, 58)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(70, 70, 70)
                                .addComponent(jButton2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(241, 241, 241)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 48, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(jButton3))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
    // Establish database connection
    String url = "jdbc:mysql://localhost:3306/Naveen";
    String username = "root";
    String password = "cksnaveen";
    Connection connection = DriverManager.getConnection(url, username, password);

    // Define the SQL query for register table
    String registerQuery = "SELECT * FROM register";
    
    // Create a PreparedStatement for register table
    PreparedStatement registerStatement = connection.prepareStatement(registerQuery);
    
    // Execute the query for register table
    ResultSet registerResult = registerStatement.executeQuery();
    
    // Display the data in a table format
    String[] columnNames = {"Name", "Age", "Gender", "Phone Number", "Email", "Address",  "Polling Station"};
    DefaultTableModel model = new DefaultTableModel(columnNames, 0);
    
    // Extract data from the result set and add it to the table model
    while (registerResult.next()) {
        String name = registerResult.getString("name");
        int age = registerResult.getInt("age");
        String gender = registerResult.getString("gender");
        String phoneNumber = registerResult.getString("phonenum");
        String email = registerResult.getString("mailid");
        String address = registerResult.getString("address");
//        String passwd = registerResult.getString("password");
        String pollingStation = registerResult.getString("pollingstation");
        
        model.addRow(new Object[]{name, age, gender, phoneNumber, email, address,  pollingStation});
    }
    
    // Display the table
    JTable table = new JTable(model);
    JOptionPane.showMessageDialog(null, new JScrollPane(table), "Records from register table", JOptionPane.PLAIN_MESSAGE);

    // Close the connection
    connection.close();

} catch (SQLException e) {
    // Handle any errors
    e.printStackTrace();
    JOptionPane.showMessageDialog(null, "Error retrieving data: " + e.getMessage());
}

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try {
    // Establish database connection
    String url = "jdbc:mysql://localhost:3306/Naveen";
    String username = "root";
    String password = "cksnaveen";
    Connection connection = DriverManager.getConnection(url, username, password);

    // Define the SQL query for candid table
    String candidQuery = "SELECT * FROM candid";
    
    // Create a PreparedStatement for candid table
    PreparedStatement candidStatement = connection.prepareStatement(candidQuery);
    
    // Execute the query for candid table
    ResultSet candidResult = candidStatement.executeQuery();
    
    // Display the data in a table format
    String[] columnNames = {"Party Name", "Party Symbol",  "Candidate Name"};
    DefaultTableModel model = new DefaultTableModel(columnNames, 0);
    
    // Extract data from the result set and add it to the table model
    while (candidResult.next()) {
        String partyName = candidResult.getString("partyname");
        String partySymbol = candidResult.getString("partysymbol");
        //String uniqueCode = candidResult.getString("uniquecode");
        String candidateName = candidResult.getString("candidatename");
        
        model.addRow(new Object[]{partyName, partySymbol,  candidateName});
    }
    
    // Display the table
    JTable table = new JTable(model);
    JOptionPane.showMessageDialog(null, new JScrollPane(table), "Records from candid table", JOptionPane.PLAIN_MESSAGE);

    // Close the connection
    connection.close();

} catch (SQLException e) {
    // Handle any errors
    e.printStackTrace();
    JOptionPane.showMessageDialog(null, "Error retrieving data: " + e.getMessage());
}

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Management m = new Management();
        this.dispose();
        m.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Report().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
