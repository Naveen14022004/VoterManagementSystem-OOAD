/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vms;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author navee
 */
public class Candidatelogin extends javax.swing.JFrame {

    /**
     * Creates new form Candidatelogin
     */
    public Candidatelogin() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("    Candidate Login");

        jLabel2.setText("Name :");

        jLabel3.setText("Uinquecode :");

        jButton1.setText("GetDetails");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("VoterDetails");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel4.setText("PollingStation :");

        jButton4.setText("Clear");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField3))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String nameToSearch = jTextField1.getText();
String uniqueCodeToSearch = jTextField2.getText();

// Validate if name and unique code are provided
if (nameToSearch.isEmpty() || uniqueCodeToSearch.isEmpty()) {
    JOptionPane.showMessageDialog(this, "Please enter both name and unique code to search!");
    return;
}

// Perform database selection
try {
    // Establish database connection
    String url = "jdbc:mysql://localhost:3306/Naveen";
    String username = "root";
    String password = "cksnaveen";
    Connection connection = DriverManager.getConnection(url, username, password);

    // Define the SQL query
    String query = "SELECT * FROM candid WHERE candidatename = ? AND uniquecode = ?";
    
    // Create a PreparedStatement
    PreparedStatement preparedStatement = connection.prepareStatement(query);
    
    // Set parameter values
    preparedStatement.setString(1, nameToSearch);
    preparedStatement.setString(2, uniqueCodeToSearch); // Set unique code parameter
    
    // Execute the query
    ResultSet resultSet = preparedStatement.executeQuery();
    
    // Check if any records are found
    if (resultSet.next()) {
        // Display the data in a table format
        String[] columnNames = {"Party Name", "Party Symbol", "Unique Code", "Candidate Name"};
        DefaultTableModel model = new DefaultTableModel(columnNames, 0);
        
        // Extract data from the result set and add it to the table model
        String partyName = resultSet.getString("partyname");
        String partySymbol = resultSet.getString("partysymbol");
        String uniqueCode = resultSet.getString("uniquecode");
        String candidateName = resultSet.getString("candidatename");
        
        model.addRow(new Object[]{partyName, partySymbol, uniqueCode, candidateName});
        
        // Display the table
        JTable table = new JTable(model);
        JOptionPane.showMessageDialog(this, new JScrollPane(table), "Records for " + nameToSearch, JOptionPane.PLAIN_MESSAGE);
    } else {
        // If no records are found, display a message
        JOptionPane.showMessageDialog(this, "No records found for the provided name and unique code.");
    }

    // Close the connection
    connection.close();

    // Clear the JTextFields for name and unique code
    jTextField1.setText("");
    jTextField2.setText("");

} catch (SQLException e) {
    // Handle any errors
    e.printStackTrace();
    JOptionPane.showMessageDialog(this, "Error retrieving data: " + e.getMessage());
}

        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String nameToSearch = jTextField1.getText();
String uniqueCodeToSearch = jTextField2.getText();
String pollingStationToSearch = jTextField3.getText();

// Validate if name, unique code, and polling station are provided
if (nameToSearch.isEmpty() || uniqueCodeToSearch.isEmpty() || pollingStationToSearch.isEmpty()) {
    JOptionPane.showMessageDialog(this, "Please enter name, unique code, and polling station to search!");
    return;
}

// Perform database selection for register table (polling station check)
try {
    // Establish database connection
    String url = "jdbc:mysql://localhost:3306/Naveen";
    String username = "root";
    String password = "cksnaveen";
    Connection connection = DriverManager.getConnection(url, username, password);

    // Define the SQL query for register table
    String registerQuery = "SELECT * FROM register WHERE  pollingstation = ?";
    
    // Create a PreparedStatement for register table
    PreparedStatement registerStatement = connection.prepareStatement(registerQuery);
    
    // Set parameter values for register query
    //registerStatement.setString(1, nameToSearch);
    registerStatement.setString(1, pollingStationToSearch);
    
    // Execute the query for register table
    ResultSet registerResult = registerStatement.executeQuery();
    
    // Check if any records are found in register table
    if (registerResult.next()) {
        // If user exists in register table with the provided polling station
        // Display the data in a table format
        String[] columnNames = {"Name", "Age", "Gender", "Address",  "Polling Station"};
        DefaultTableModel model = new DefaultTableModel(columnNames, 0);
        
        // Extract data from the result set and add it to the table model
        String name = registerResult.getString("name");
        int age = registerResult.getInt("age");
        String gender = registerResult.getString("gender");
//        String phoneNumber = registerResult.getString("phonenum");
//        String email = registerResult.getString("mailid");
        String address = registerResult.getString("address");
//        String passwd = registerResult.getString("password");
        String pollingStation = registerResult.getString("pollingstation");
        
        model.addRow(new Object[]{name, age, gender, address,  pollingStation});
        
        // Display the table
        JTable table = new JTable(model);
        JOptionPane.showMessageDialog(this, new JScrollPane(table), "Records for " + nameToSearch, JOptionPane.PLAIN_MESSAGE);
    } else {
        // If no records are found in register table or polling station doesn't match, display a message
        JOptionPane.showMessageDialog(this, "No records found for the provided name and polling station.");
    }

    // Close the connection
    connection.close();

    // Clear the JTextFields
    jTextField1.setText("");
    jTextField2.setText("");
    jTextField3.setText("");

} catch (SQLException e) {
    // Handle any errors
    e.printStackTrace();
    JOptionPane.showMessageDialog(this, "Error retrieving data: " + e.getMessage());
}


    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
//        jTextField4.setText("");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Home h = new Home();
        this.dispose();
        h.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Candidatelogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Candidatelogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Candidatelogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Candidatelogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Candidatelogin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
